{"ast":null,"code":"var _jsxFileName = \"/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js\",\n  _s = $RefreshSig$();\n// src/components/GamePage.js\nimport React, { useState } from 'react';\nimport './GamePage.css'; // Create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  // State for user cards, computer cards, and the displayed card\n  const [userCards, setUserCards] = useState(['Card 1', 'Card 2', 'Card 3', 'Card 4']);\n  const [computerCards, setComputerCards] = useState(['Card A', 'Card B', 'Card C', 'Card D']);\n  const [displayedCard, setDisplayedCard] = useState('Displayed Card');\n\n  // State for the score\n  const [userScore, setUserScore] = useState(0);\n  const [computerScore, setComputerScore] = useState(0);\n\n  // Function to handle user's move (assuming you have some game logic)\n  const handleUserMove = () => {\n    // Your game logic for user's move here\n    // Update user cards, computer cards, displayed card, and scores accordingly\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User Score: \", userScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Computer Score: \", computerScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: userCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Displayed Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayed-card\",\n        children: displayedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"computer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Computer Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: computerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"U7RsuKDJuhlYToK+klgdbYWiUmA=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GamePage","_s","userCards","setUserCards","computerCards","setComputerCards","displayedCard","setDisplayedCard","userScore","setUserScore","computerScore","setComputerScore","handleUserMove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","_c","$RefreshReg$"],"sources":["/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js"],"sourcesContent":["// src/components/GamePage.js\nimport React, { useState } from 'react';\nimport './GamePage.css'; // Create this file for styling\n\nconst GamePage = () => {\n  // State for user cards, computer cards, and the displayed card\n  const [userCards, setUserCards] = useState(['Card 1', 'Card 2', 'Card 3', 'Card 4']);\n  const [computerCards, setComputerCards] = useState(['Card A', 'Card B', 'Card C', 'Card D']);\n  const [displayedCard, setDisplayedCard] = useState('Displayed Card');\n\n  // State for the score\n  const [userScore, setUserScore] = useState(0);\n  const [computerScore, setComputerScore] = useState(0);\n\n  // Function to handle user's move (assuming you have some game logic)\n  const handleUserMove = () => {\n    // Your game logic for user's move here\n    // Update user cards, computer cards, displayed card, and scores accordingly\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"score-box\">\n        <p>User Score: {userScore}</p>\n        <p>Computer Score: {computerScore}</p>\n      </div>\n\n      <div className=\"user-section\">\n        <h3>Your Cards</h3>\n        <div className=\"card-container\">\n          {userCards.map((card, index) => (\n            <div key={index} className=\"card\">\n              {card}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"display-section\">\n        <h3>Displayed Card</h3>\n        <div className=\"displayed-card\">{displayedCard}</div>\n      </div>\n\n      <div className=\"computer-section\">\n        <h3>Computer Cards</h3>\n        <div className=\"card-container\">\n          {computerCards.map((card, index) => (\n            <div key={index} className=\"card\">\n              {card}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}