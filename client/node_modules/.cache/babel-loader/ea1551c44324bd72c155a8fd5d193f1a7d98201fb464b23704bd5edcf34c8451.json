{"ast":null,"code":"var _jsxFileName = \"/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js\",\n  _s = $RefreshSig$();\n// src/components/GamePage.js\nimport React, { useState, useEffect } from 'react';\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [userCards, setUserCards] = useState([]);\n  const [computerCards, setComputerCards] = useState([]);\n  const [displayedCard, setDisplayedCard] = useState('');\n  useEffect(() => {\n    fetchDeck();\n  }, []);\n  const fetchDeck = () => {\n    fetch('http://localhost:5555/deck').then(response => response.json()).then(data => {\n      setUserCards(data.deck.slice(0, 4));\n      setComputerCards(data.deck.slice(4, 8));\n      setDisplayedCard(data.deck[8]);\n    }).catch(error => console.error('Error fetching deck:', error));\n  };\n  const shuffleDeck = () => {\n    fetch('http://localhost:5555/shuffle', {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      console.log(data.message);\n      fetchDeck();\n    }).catch(error => console.error('Error shuffling deck:', error));\n  };\n  const drawCard = () => {\n    fetch('http://localhost:5555/draw', {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      const newCard = data.card;\n      setUserCards(prevUserCards => [...prevUserCards, newCard]);\n      // Update computer cards, displayed card, and scores accordingly\n      // (Your game logic for drawing a card goes here)\n    }).catch(error => console.error('Error drawing card:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: userCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Displayed Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayed-card\",\n        children: displayedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Computer Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: computerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-interaction\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchDeck,\n        children: \"Fetch Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffleDeck,\n        children: \"Shuffle Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: drawCard,\n        children: \"Draw Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"/F6UEm3PCpjTZGRdhPk6WbQfZEI=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GamePage","_s","userCards","setUserCards","computerCards","setComputerCards","displayedCard","setDisplayedCard","fetchDeck","fetch","then","response","json","data","deck","slice","catch","error","console","shuffleDeck","method","log","message","drawCard","newCard","card","prevUserCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js"],"sourcesContent":["// src/components/GamePage.js\nimport React, { useState, useEffect } from 'react';\nimport './GamePage.css';\n\nconst GamePage = () => {\n  const [userCards, setUserCards] = useState([]);\n  const [computerCards, setComputerCards] = useState([]);\n  const [displayedCard, setDisplayedCard] = useState('');\n\n  useEffect(() => {\n    fetchDeck();\n  }, []);\n\n  const fetchDeck = () => {\n    fetch('http://localhost:5555/deck')\n      .then(response => response.json())\n      .then(data => {\n        setUserCards(data.deck.slice(0, 4));\n        setComputerCards(data.deck.slice(4, 8));\n        setDisplayedCard(data.deck[8]);\n      })\n      .catch(error => console.error('Error fetching deck:', error));\n  };\n\n  const shuffleDeck = () => {\n    fetch('http://localhost:5555/shuffle', { method: 'POST' })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.message);\n        fetchDeck();\n      })\n      .catch(error => console.error('Error shuffling deck:', error));\n  };\n\n  const drawCard = () => {\n    fetch('http://localhost:5555/draw', { method: 'POST' })\n      .then(response => response.json())\n      .then(data => {\n        const newCard = data.card;\n        setUserCards(prevUserCards => [...prevUserCards, newCard]);\n        // Update computer cards, displayed card, and scores accordingly\n        // (Your game logic for drawing a card goes here)\n      })\n      .catch(error => console.error('Error drawing card:', error));\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"card-container\">\n        <h3>Your Cards</h3>\n        <div className=\"card-container\">\n          {userCards.map((card, index) => (\n            <div key={index} className=\"card\">\n              {card}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"display-section\">\n        <h3>Displayed Card</h3>\n        <div className=\"displayed-card\">{displayedCard}</div>\n      </div>\n\n      <div className=\"card-container\">\n        <h3>Computer Cards</h3>\n        <div className=\"card-container\">\n          {computerCards.map((card, index) => (\n            <div key={index} className=\"card\">\n              {card}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"api-interaction\">\n        <button onClick={fetchDeck}>Fetch Deck</button>\n        <button onClick={shuffleDeck}>Shuffle Deck</button>\n        <button onClick={drawCard}>Draw Card</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}