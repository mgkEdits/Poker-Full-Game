{"ast":null,"code":"var _jsxFileName = \"/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GamePage.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [userCards, setUserCards] = useState([]);\n  const [computerCards, setComputerCards] = useState([]);\n  const [displayedCard, setDisplayedCard] = useState('');\n  const [availableCards, setAvailableCards] = useState({\n    regular_cards: [\"2H\", \"2D\", \"2C\", \"2S\", \"3H\", \"3D\", \"3C\", \"3S\", \"4H\", \"4D\", \"4C\", \"4S\", \"5H\", \"5D\", \"5C\", \"5S\", \"6H\", \"6D\", \"6C\", \"6S\", \"7H\", \"7D\", \"7C\", \"7S\", \"8H\", \"8D\", \"8C\", \"8S\", \"9H\", \"9D\", \"9C\", \"9S\", \"10H\", \"10D\", \"10C\", \"10S\", \"QH\", \"QD\", \"QC\", \"QS\", \"AH\", \"AD\", \"AC\", \"AS\"],\n    special_cards: [\"2H\", \"3H\", \"AH\", \"QH\", \"2D\", \"3D\", \"AD\", \"QD\", \"2C\", \"3C\", \"AC\", \"QC\", \"2S\", \"3S\", \"AS\", \"QS\"]\n  });\n  useEffect(() => {\n    dealCards();\n  }, []); // Empty dependency array ensures useEffect runs only once on component mount\n\n  const dealCards = () => {\n    // Deal 2 regular cards to the user and computer\n    const userRegularCard1 = dealCard('regular_cards');\n    const userRegularCard2 = dealCard('regular_cards');\n    const computerRegularCard1 = dealCard('regular_cards');\n    const computerRegularCard2 = dealCard('regular_cards');\n\n    // Deal 1 regular card to the display\n    const displayedRegularCard = dealCard('regular_cards');\n    setUserCards([userRegularCard1, userRegularCard2]);\n    setComputerCards([computerRegularCard1, computerRegularCard2]);\n    setDisplayedCard(displayedRegularCard);\n  };\n  const dealCard = cardType => {\n    const cards = availableCards[cardType];\n    const randomIndex = Math.floor(Math.random() * cards.length);\n    const dealtCard = cards[randomIndex];\n\n    // Remove the dealt card from available cards\n    setAvailableCards(prevState => ({\n      ...prevState,\n      [cardType]: cards.filter(card => card !== dealtCard)\n    }));\n    return dealtCard;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-row\",\n          children: userCards.slice(0, 2).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: card\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-row\",\n          children: userCards.slice(2).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: card\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Displayed Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayed-card\",\n        children: displayedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"computer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Computer Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-row\",\n          children: computerCards.slice(0, 2).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: card\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-row\",\n          children: computerCards.slice(2).map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: card\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"ZX+jX1P5nn9BjCna5NOkiPtEzG4=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GamePage","_s","userCards","setUserCards","computerCards","setComputerCards","displayedCard","setDisplayedCard","availableCards","setAvailableCards","regular_cards","special_cards","dealCards","userRegularCard1","dealCard","userRegularCard2","computerRegularCard1","computerRegularCard2","displayedRegularCard","cardType","cards","randomIndex","Math","floor","random","length","dealtCard","prevState","filter","card","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","_c","$RefreshReg$"],"sources":["/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GamePage.css'; // Import the CSS file for styling\n\nconst GamePage = () => {\n  const [userCards, setUserCards] = useState([]);\n  const [computerCards, setComputerCards] = useState([]);\n  const [displayedCard, setDisplayedCard] = useState('');\n  const [availableCards, setAvailableCards] = useState({\n    regular_cards: [\n      \"2H\", \"2D\", \"2C\", \"2S\",\n      \"3H\", \"3D\", \"3C\", \"3S\",\n      \"4H\", \"4D\", \"4C\", \"4S\",\n      \"5H\", \"5D\", \"5C\", \"5S\",\n      \"6H\", \"6D\", \"6C\", \"6S\",\n      \"7H\", \"7D\", \"7C\", \"7S\",\n      \"8H\", \"8D\", \"8C\", \"8S\",\n      \"9H\", \"9D\", \"9C\", \"9S\",\n      \"10H\", \"10D\", \"10C\", \"10S\",\n      \"QH\", \"QD\", \"QC\", \"QS\",\n      \"AH\", \"AD\", \"AC\", \"AS\"\n    ],\n    special_cards: [\n      \"2H\", \"3H\", \"AH\", \"QH\",\n      \"2D\", \"3D\", \"AD\", \"QD\",\n      \"2C\", \"3C\", \"AC\", \"QC\",\n      \"2S\", \"3S\", \"AS\", \"QS\"\n    ]\n  });\n\n  useEffect(() => {\n    dealCards();\n  }, []); // Empty dependency array ensures useEffect runs only once on component mount\n\n  const dealCards = () => {\n    // Deal 2 regular cards to the user and computer\n    const userRegularCard1 = dealCard('regular_cards');\n    const userRegularCard2 = dealCard('regular_cards');\n    const computerRegularCard1 = dealCard('regular_cards');\n    const computerRegularCard2 = dealCard('regular_cards');\n\n    // Deal 1 regular card to the display\n    const displayedRegularCard = dealCard('regular_cards');\n\n    setUserCards([userRegularCard1, userRegularCard2]);\n    setComputerCards([computerRegularCard1, computerRegularCard2]);\n    setDisplayedCard(displayedRegularCard);\n  };\n\n  const dealCard = (cardType) => {\n    const cards = availableCards[cardType];\n    const randomIndex = Math.floor(Math.random() * cards.length);\n    const dealtCard = cards[randomIndex];\n\n    // Remove the dealt card from available cards\n    setAvailableCards(prevState => ({\n      ...prevState,\n      [cardType]: cards.filter(card => card !== dealtCard)\n    }));\n\n    return dealtCard;\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"user-section\">\n        <h3>Your Cards</h3>\n        <div className=\"card-container\">\n          <div className=\"card-row\">\n            {userCards.slice(0, 2).map((card, index) => (\n              <div key={index} className=\"card\">\n                {card}\n              </div>\n            ))}\n          </div>\n          <div className=\"card-row\">\n            {userCards.slice(2).map((card, index) => (\n              <div key={index} className=\"card\">\n                {card}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"display-section\">\n        <h3>Displayed Card</h3>\n        <div className=\"displayed-card\">{displayedCard}</div>\n      </div>\n\n      <div className=\"computer-section\">\n        <h3>Computer Cards</h3>\n        <div className=\"card-container\">\n          <div className=\"card-row\">\n            {computerCards.slice(0, 2).map((card, index) => (\n              <div key={index} className=\"card\">\n                {card}\n              </div>\n            ))}\n          </div>\n          <div className=\"card-row\">\n            {computerCards.slice(2).map((card, index) => (\n              <div key={index} className=\"card\">\n                {card}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC;IACnDc,aAAa,EAAE,CACb,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAC1B,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CACvB;IACDC,aAAa,EAAE,CACb,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;EAE1B,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,gBAAgB,GAAGC,QAAQ,CAAC,eAAe,CAAC;IAClD,MAAMC,gBAAgB,GAAGD,QAAQ,CAAC,eAAe,CAAC;IAClD,MAAME,oBAAoB,GAAGF,QAAQ,CAAC,eAAe,CAAC;IACtD,MAAMG,oBAAoB,GAAGH,QAAQ,CAAC,eAAe,CAAC;;IAEtD;IACA,MAAMI,oBAAoB,GAAGJ,QAAQ,CAAC,eAAe,CAAC;IAEtDX,YAAY,CAAC,CAACU,gBAAgB,EAAEE,gBAAgB,CAAC,CAAC;IAClDV,gBAAgB,CAAC,CAACW,oBAAoB,EAAEC,oBAAoB,CAAC,CAAC;IAC9DV,gBAAgB,CAACW,oBAAoB,CAAC;EACxC,CAAC;EAED,MAAMJ,QAAQ,GAAIK,QAAQ,IAAK;IAC7B,MAAMC,KAAK,GAAGZ,cAAc,CAACW,QAAQ,CAAC;IACtC,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC;IAC5D,MAAMC,SAAS,GAAGN,KAAK,CAACC,WAAW,CAAC;;IAEpC;IACAZ,iBAAiB,CAACkB,SAAS,KAAK;MAC9B,GAAGA,SAAS;MACZ,CAACR,QAAQ,GAAGC,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKH,SAAS;IACrD,CAAC,CAAC,CAAC;IAEH,OAAOA,SAAS;EAClB,CAAC;EAED,oBACE3B,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhC,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhC,OAAA;QAAAgC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBpC,OAAA;QAAK+B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BhC,OAAA;UAAK+B,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtB7B,SAAS,CAACkC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBACrCvC,OAAA;YAAiB+B,SAAS,EAAC,MAAM;YAAAC,QAAA,EAC9BF;UAAI,GADGS,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNpC,OAAA;UAAK+B,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtB7B,SAAS,CAACkC,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBAClCvC,OAAA;YAAiB+B,SAAS,EAAC,MAAM;YAAAC,QAAA,EAC9BF;UAAI,GADGS,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENpC,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BhC,OAAA;QAAAgC,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBpC,OAAA;QAAK+B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEzB;MAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAENpC,OAAA;MAAK+B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BhC,OAAA;QAAAgC,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBpC,OAAA;QAAK+B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BhC,OAAA;UAAK+B,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtB3B,aAAa,CAACgC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBACzCvC,OAAA;YAAiB+B,SAAS,EAAC,MAAM;YAAAC,QAAA,EAC9BF;UAAI,GADGS,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNpC,OAAA;UAAK+B,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtB3B,aAAa,CAACgC,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBACtCvC,OAAA;YAAiB+B,SAAS,EAAC,MAAM;YAAAC,QAAA,EAC9BF;UAAI,GADGS,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA3GID,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AA6Gd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}