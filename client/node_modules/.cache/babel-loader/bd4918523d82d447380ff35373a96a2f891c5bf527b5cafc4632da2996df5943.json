{"ast":null,"code":"var _jsxFileName = \"/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/game/homeLayout.js\",\n  _s = $RefreshSig$();\nimport './game.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from './navBar';\nimport NavCenter from './navCenter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeLayout() {\n  _s();\n  // const [playedCard, setPlayedCard] = useState([]);\n  // const [gameCard, setGameCard] = useState([]);\n\n  const [displayedCard, setDisplayedCard] = useState(null);\n  const [userHand, setUserHand] = useState([]);\n  const [compHand, setCompHand] = useState([]);\n  const [availableCards, setAvailableCards] = useState([]);\n  // const [discardPile, setDiscardPile] = useState([]);\n  // const [userTurn, setUserTurn] = useState(false);\n\n  const handlePickCard = () => {\n    const usrPickedCrd = availableCards.shift();\n    setUserHand([...userHand, usrPickedCrd]);\n    console.log(usrPickedCrd, \"user picked card\");\n    setTimeout(aiLogic, 3000);\n  };\n  console.log(availableCards);\n  useEffect(() => {\n    axios.get('http://localhost:5555/deck').then(response => {\n      const deck = response.data.deck;\n      setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n      setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n      setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n      setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n      // setUserTurn(true);\n    }).catch(error => {\n      console.error('Error fetching deck:', error);\n    });\n  }, []);\n  const playCard = card => {\n    const usrPlayedCrd = card;\n    console.log(usrPlayedCrd, 'user played card');\n    if (usrPlayedCrd.rank === displayedCard.rank || usrPlayedCrd.suit === displayedCard.suit) {\n      // setDiscardPile([...discardPile,displayedCard]);\n      // console.log(displayedCard)\n      // setAvailableCards([...availableCards,displayedCard])\n      setDisplayedCard(prevDisplayedCard => {\n        // Log the updated displayedCard value\n        console.log('Updated displayed card:', usrPlayedCrd);\n        return usrPlayedCrd;\n      });\n      handleeSpecialCardRules(usrPlayedCrd); //passing penalty to pc\n      console.log(displayedCard, \"new displayed card\");\n      const updatedUserHand = userHand.filter(card => card !== usrPlayedCrd);\n      setUserHand(updatedUserHand);\n      setTimeout(checkForWinner, 2000);\n      console.log(\"its now ai`s turn\"); // Call the function for AI logic after a delay\n      setTimeout(aiLogic, 3000);\n      //function for comp to play\n    } else {\n      alert(\"Pick another card\");\n    }\n  };\n  function isValidMove(aiCard) {\n    return aiCard.suit === displayedCard.suit || aiCard.rank === displayedCard.rank;\n  }\n  function handleSpecialCardRules(card) {\n    switch (card.rank) {\n      case '2':\n        handlePenalty(2);\n        break;\n      case '3':\n        handlePenalty(3);\n        break;\n    }\n  }\n  function handleeSpecialCardRules(card) {\n    switch (card.rank) {\n      case '2':\n        handleePenalty(2);\n        break;\n      case '3':\n        handleePenalty(3);\n        break;\n    }\n  }\n  function handleePenalty(count) {\n    // \n    for (let i = 0; i < count; i++) {\n      const drawnCard = availableCards.shift();\n      setCompHand([...compHand, drawnCard]);\n      console.log('AI draws penalty card:', drawnCard);\n    }\n  }\n  function handlePenalty(count) {\n    for (let i = 0; i < count; i++) {\n      const drawnCard = availableCards.shift();\n      setUserHand([...userHand, drawnCard]);\n      console.log('Player draws penalty card:', drawnCard);\n    }\n  }\n  const dropCard = cardsToDrop => {\n    const aiSelectedCrd = cardsToDrop[Math.floor(Math.random() * cardsToDrop.length)];\n    console.log(aiSelectedCrd, \"ai played card move\");\n\n    // setAvailableCards([...availableCards, displayedCard]);\n    setDisplayedCard(aiSelectedCrd);\n    handleSpecialCardRules(aiSelectedCrd);\n    const updatedCompHand = compHand.filter(card => !cardsToDrop.includes(card));\n    setCompHand(updatedCompHand);\n    setTimeout(checkForWinner, 2000);\n  };\n  const getCardRankValue = rank => {\n    const rankValues = {\n      'Ace': 1,\n      '2': 2,\n      '3': 3,\n      '4': 4,\n      '5': 5,\n      '6': 6,\n      '7': 7,\n      '8': 8,\n      '9': 9,\n      '10': 10,\n      'Queen': 11\n      // Add more ranks as needed\n    };\n    return rankValues[rank] || 0;\n  };\n\n  //computer logic for game continuity\n  const aiLogic = () => {\n    console.log(displayedCard, \"previously displayed card\");\n    const validMoves = compHand.filter(isValidMove);\n    console.log(validMoves, \"valid moves\");\n    if (validMoves.length > 0) {\n      const specialMoves = validMoves.filter(card => card.rank === 'Queen' || card.rank === '8');\n      if (specialMoves.length > 0) {\n        dropCard(specialMoves);\n      } else {\n        // Prioritize dropping cards with the same suit as the displayed card\n        const sameSuitMoves = validMoves.filter(card => card.suit === displayedCard.suit);\n        if (sameSuitMoves.length > 0) {\n          dropCard(sameSuitMoves);\n        } else {\n          // If no special or same suit moves, prioritize dropping lower-ranked cards\n          validMoves.sort((a, b) => getCardRankValue(a.rank) - getCardRankValue(b.rank));\n          dropCard([validMoves[0]]);\n        }\n      }\n    } else {\n      // Computer draws a card\n      const aiPickedCrd = availableCards.shift();\n      setCompHand([...compHand, aiPickedCrd]);\n      console.log(aiPickedCrd, \"ai picked card\");\n    }\n  };\n  function checkForWinner() {\n    if (userHand.length === 0) {\n      console.log('Player wins!');\n    } else if (compHand.length === 0) {\n      console.log('Computer wins!');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeLayout-crd\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar /* ----------------------------add username as prop from Cookie  -----------------*/, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavCenter /*-----------------------   add games won Prop for Running   -----------------------------------*/, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crd-wrap\" /*-------  User Cards Section  ---------*/,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userDec-crd\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Hand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userDec-crrd\",\n          children: userHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playCardDec-crd\",\n            onClick: () => playCard(card),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [card.rank, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"*\", card.suit, \"* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crd-shell\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardDec-crd\",\n          onClick: handlePickCard /*-------  Pick Cards Section  ---------*/,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pick Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gamedec-crd\" /*-------  Game Table Section  ---------*/,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Game Table \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crdd-wrp\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crd-crd\" /*-------  Game Card Section  ---------*/,\n              children: displayedCard && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Game Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [displayedCard.rank, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" **\", displayedCard.suit, \"**\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pcDec-crd\" /*-------  pc Cards Section  ---------*/,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"pc Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userDec-crrd\",\n          children: compHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playCardDec-crd\",\n            onClick: () => playCard(index),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [card.rank, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"*\", card.suit, \"* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Quit Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeLayout, \"Sn2FKMuprEWmF8uSqNVJKyaH6hc=\");\n_c = HomeLayout;\nexport default HomeLayout;\nvar _c;\n$RefreshReg$(_c, \"HomeLayout\");","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar","NavCenter","jsxDEV","_jsxDEV","HomeLayout","_s","displayedCard","setDisplayedCard","userHand","setUserHand","compHand","setCompHand","availableCards","setAvailableCards","handlePickCard","usrPickedCrd","shift","console","log","setTimeout","aiLogic","get","then","response","deck","data","pop","slice","catch","error","playCard","card","usrPlayedCrd","rank","suit","prevDisplayedCard","handleeSpecialCardRules","updatedUserHand","filter","checkForWinner","alert","isValidMove","aiCard","handleSpecialCardRules","handlePenalty","handleePenalty","count","i","drawnCard","dropCard","cardsToDrop","aiSelectedCrd","Math","floor","random","length","updatedCompHand","includes","getCardRankValue","rankValues","validMoves","specialMoves","sameSuitMoves","sort","a","b","aiPickedCrd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/game/homeLayout.js"],"sourcesContent":["import './game.css'\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport NavBar from './navBar'\nimport NavCenter from './navCenter'\n\nfunction HomeLayout() {\n\n\n  // const [playedCard, setPlayedCard] = useState([]);\n  // const [gameCard, setGameCard] = useState([]);\n\n  const [displayedCard, setDisplayedCard] = useState(null);\n  const [userHand, setUserHand] = useState([]);\n  const [compHand, setCompHand] = useState([]);\n  const [availableCards, setAvailableCards] = useState([]);\n  // const [discardPile, setDiscardPile] = useState([]);\n  // const [userTurn, setUserTurn] = useState(false);\n\n\n  const handlePickCard=( )=>{\n     const usrPickedCrd = availableCards.shift()\n     setUserHand([...userHand,usrPickedCrd])\n     console.log(usrPickedCrd, \"user picked card\")\n     setTimeout(aiLogic,3000);\n  }\n  console.log(availableCards);\n\n  useEffect(() => {\n    axios.get('http://localhost:5555/deck')\n      .then(response => {\n        const deck = response.data.deck;\n        setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n        setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n        setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n        setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n        // setUserTurn(true);\n      })\n      .catch(error => {\n        console.error('Error fetching deck:', error);\n      });\n  }, []);\n\n  const playCard = (card) => {\n    const usrPlayedCrd = card\n    console.log(usrPlayedCrd,'user played card');\n\n    if (usrPlayedCrd.rank === displayedCard.rank ||usrPlayedCrd.suit === displayedCard.suit ){\n      // setDiscardPile([...discardPile,displayedCard]);\n      // console.log(displayedCard)\n      // setAvailableCards([...availableCards,displayedCard])\n      setDisplayedCard((prevDisplayedCard) => {\n        // Log the updated displayedCard value\n        console.log('Updated displayed card:', usrPlayedCrd);\n        return usrPlayedCrd;\n      });\n      handleeSpecialCardRules(usrPlayedCrd); //passing penalty to pc\n      console.log(displayedCard,\"new displayed card\")\n      const updatedUserHand = userHand.filter(card => card !== usrPlayedCrd);\n      setUserHand(updatedUserHand);\n\n      setTimeout(checkForWinner,2000);\n\n      console.log(\"its now ai`s turn\") // Call the function for AI logic after a delay\n      setTimeout(aiLogic,3000);\n      //function for comp to play\n    }else{\n     \n      alert(\"Pick another card\")\n    }\n    \n  };\n\n  \n  function isValidMove(aiCard) { \n    return aiCard.suit === displayedCard.suit || aiCard.rank === displayedCard.rank; \n   }\n\n   function handleSpecialCardRules(card) {\n    switch (card.rank) {\n      case '2':\n        handlePenalty(2);\n        break;\n      case '3':\n        handlePenalty(3);\n        break;\n    }\n  }\n\n  function handleeSpecialCardRules(card) {\n    switch (card.rank) {\n      case '2':\n        handleePenalty(2);\n        break;\n      case '3':\n        handleePenalty(3);\n        break;\n    }\n  }\n\n  function handleePenalty(count) { // \n    for (let i = 0; i < count; i++) {\n      const drawnCard = availableCards.shift()\n      setCompHand([...compHand,drawnCard])\n      console.log('AI draws penalty card:', drawnCard);\n    }\n  }\n\n  function handlePenalty(count) {\n    for (let i = 0; i < count; i++) {\n      const drawnCard = availableCards.shift()\n      setUserHand([...userHand,drawnCard])\n      console.log('Player draws penalty card:', drawnCard);\n    }\n  }\n\n  const dropCard = (cardsToDrop) => {\n    const aiSelectedCrd = cardsToDrop[Math.floor(Math.random() * cardsToDrop.length)];\n    console.log(aiSelectedCrd, \"ai played card move\");\n  \n    // setAvailableCards([...availableCards, displayedCard]);\n    setDisplayedCard(aiSelectedCrd);\n    handleSpecialCardRules(aiSelectedCrd);\n  \n    const updatedCompHand = compHand.filter(card => !cardsToDrop.includes(card));\n    setCompHand(updatedCompHand);\n    setTimeout(checkForWinner,2000);\n  };\n\n  const getCardRankValue = (rank) => {\n    const rankValues = {\n      'Ace': 1,\n      '2': 2,\n      '3': 3,\n      '4': 4,\n      '5': 5,\n      '6': 6,\n      '7': 7,\n      '8': 8,\n      '9': 9,\n      '10': 10,\n      'Queen': 11\n      // Add more ranks as needed\n    };\n  \n    return rankValues[rank] || 0;\n  };\n  \n  //computer logic for game continuity\n  const aiLogic = () =>{\n    console.log(displayedCard, \"previously displayed card\")\n    const validMoves = compHand.filter(isValidMove);\n    console.log(validMoves, \"valid moves\")\n    \n    if (validMoves.length > 0) {\n     \n      const specialMoves = validMoves.filter(card => card.rank === 'Queen' || card.rank === '8');\n      if (specialMoves.length > 0) {\n        dropCard(specialMoves);\n      } else {\n        // Prioritize dropping cards with the same suit as the displayed card\n        const sameSuitMoves = validMoves.filter(card => card.suit === displayedCard.suit);\n        if (sameSuitMoves.length > 0) {\n          dropCard(sameSuitMoves);\n        } else {\n          // If no special or same suit moves, prioritize dropping lower-ranked cards\n          validMoves.sort((a, b) => getCardRankValue(a.rank) - getCardRankValue(b.rank));\n          dropCard([validMoves[0]]);\n        }\n      }\n    }else {\n      // Computer draws a card\n      const aiPickedCrd = availableCards.shift()\n      setCompHand([...compHand,aiPickedCrd])\n      console.log(aiPickedCrd, \"ai picked card\")\n    }\n  };\n\n  function checkForWinner() {\n    if (userHand.length === 0) {\n      console.log('Player wins!');\n    } else if (compHand.length === 0) {\n      console.log('Computer wins!');\n    }\n  }\n\n  return (\n    <div className='homeLayout-crd'>\n      <NavBar  /* ----------------------------add username as prop from Cookie  -----------------*/ />  \n      <NavCenter  /*-----------------------   add games won Prop for Running   -----------------------------------*/ />\n      \n      <div className='crd-wrap'/*-------  User Cards Section  ---------*/>\n        <div className='userDec-crd'>\n        <h2>Your Hand</h2>\n        \n          <div className='userDec-crrd'>\n            {userHand.map((card, index) => (\n              <div  className='playCardDec-crd' key={index} onClick={() => playCard(card)}>\n                <p>{card.rank} </p> \n                <p>*{card.suit}* </p>\n              </div>\n            ))}\n          </div>\n        \n     </div>\n        <div className='crd-shell'>\n            <div className='cardDec-crd'  onClick={handlePickCard}/*-------  Pick Cards Section  ---------*/ > \n            <h2>Pick Card</h2>\n            </div>\n\n            <div className='gamedec-crd' /*-------  Game Table Section  ---------*/>\n              <p>Game Table </p>\n                <div className='crdd-wrp'>\n                \n                \n                <div className='crd-crd'/*-------  Game Card Section  ---------*/>\n                {displayedCard && (\n                  <div>\n                    <h2>Game Card</h2>\n                    <p>{displayedCard.rank} </p>\n                    <p> **{displayedCard.suit}**</p>\n                  </div>\n                )}\n                </div>\n        \n                </div>\n            </div>\n        </div>\n        <div className='pcDec-crd' /*-------  pc Cards Section  ---------*/>\n          <h2>pc Cards</h2>\n          \n            <div className='userDec-crrd'>\n              \n              {compHand.map((card, index) => (\n                <div  className='playCardDec-crd' key={index} onClick={() => playCard(index)}>\n                  \n                <p>{card.rank} </p> \n                <p>*{card.suit}* </p>\n                  \n                </div>\n              ))}\n            </div>\n         \n        </div>\n      </div>\n      <div className='btn'>\n        <button>Quit Game</button>\n      </div>\n    </div>\n  )\n}\n\nexport default HomeLayout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}