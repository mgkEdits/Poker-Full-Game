{"ast":null,"code":"var _jsxFileName = \"/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/Home.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleNewGame = e => {\n  e.preventDefault();\n  window.location.href = '/PokerGame';\n};\nconst handleViewScores = e => {\n  e.preventDefault();\n  window.location.href = '/Standing-Score';\n  axios.get('http://localhost:5555/scores/<int:id>');\n  //       .then(response => {\n  //         setDisplayedCard(response.data.displayed_card);\n  //         setUserTurn(true);\n  //       })\n  //       .catch(error => {\n  //         console.error('Error starting the game:', error);\n  //       });\n};\nconst handleLogOut = e => {\n  e.preventDefault();\n  window.location.href = '/';\n};\n\n// /*---------------------------------lohic to initiali*/\n//   const [displayedCard, setDisplayedCard] = useState(null);\n//   const [userHand, setUserHand] = useState([]);\n//   const [compHand, setCompHand] = useState([]);\n//   const [availableCards, setAvailableCards] = useState([]);\n//   const [userTurn, setUserTurn] = useState(false);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:5555/deck')\n//       .then(response => {\n//         const deck = response.data.deck;\n//         setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n//         setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n//         setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n//         setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n//         setUserTurn(true);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching deck:', error);\n//       });\n//   }, []);\n\n//   const startGame = () => {\n//     axios.get('http://localhost:5555/start_game')\n//       .then(response => {\n//         setDisplayedCard(response.data.displayed_card);\n//         setUserTurn(true);\n//       })\n//       .catch(error => {\n//         console.error('Error starting the game:', error);\n//       });\n//   };\n\n//   const playCard = (cardIndex) => {\n//     // Implement the logic to play a card\n//     // Update the 'userTurn', 'displayedCard', 'userHand', 'compHand', and 'availableCards' state accordingly\n//     // Make a POST request to '/play_card' endpoint on the Flask server\n//   };\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-wrp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-sqr\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-sqr\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Poker Game \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-sqr\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleViewScores,\n        children: \"View Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogOut,\n        children: \" Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","handleNewGame","e","preventDefault","window","location","href","handleViewScores","axios","get","handleLogOut","Home","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/Home.js"],"sourcesContent":["import React from 'react'\n\nconst handleNewGame= (e) => {\n  e.preventDefault();\n  window.location.href = '/PokerGame';\n};\n\nconst handleViewScores= (e) => {\n  e.preventDefault();\n  window.location.href = '/Standing-Score';\n  axios.get('http://localhost:5555/scores/<int:id>')\n//       .then(response => {\n//         setDisplayedCard(response.data.displayed_card);\n//         setUserTurn(true);\n//       })\n//       .catch(error => {\n//         console.error('Error starting the game:', error);\n//       });\n};\n\nconst handleLogOut= (e) => {\n  e.preventDefault();\n  window.location.href = '/';\n};\n\n\n// /*---------------------------------lohic to initiali*/\n//   const [displayedCard, setDisplayedCard] = useState(null);\n//   const [userHand, setUserHand] = useState([]);\n//   const [compHand, setCompHand] = useState([]);\n//   const [availableCards, setAvailableCards] = useState([]);\n//   const [userTurn, setUserTurn] = useState(false);\n\n//   useEffect(() => {\n//     axios.get('http://localhost:5555/deck')\n//       .then(response => {\n//         const deck = response.data.deck;\n//         setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n//         setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n//         setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n//         setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n//         setUserTurn(true);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching deck:', error);\n//       });\n//   }, []);\n\n//   const startGame = () => {\n//     axios.get('http://localhost:5555/start_game')\n//       .then(response => {\n//         setDisplayedCard(response.data.displayed_card);\n//         setUserTurn(true);\n//       })\n//       .catch(error => {\n//         console.error('Error starting the game:', error);\n//       });\n//   };\n\n//   const playCard = (cardIndex) => {\n//     // Implement the logic to play a card\n//     // Update the 'userTurn', 'displayedCard', 'userHand', 'compHand', and 'availableCards' state accordingly\n//     // Make a POST request to '/play_card' endpoint on the Flask server\n//   };\nfunction Home() {\n  return (\n    <div className='home-wrp'>\n       <div className='right-sqr'>\n       <div className='title-sqr'>\n       <h1> Poker Game </h1>\n       </div>\n      </div>\n\n      <div className='left-sqr'>\n        <button  onClick={handleNewGame}>New Game</button>\n        <button  onClick={handleViewScores}>View Scores</button>\n        <button  onClick={handleLogOut}> Log Out</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Home"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,aAAa,GAAGC,CAAC,IAAK;EAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;AACrC,CAAC;AAED,MAAMC,gBAAgB,GAAGL,CAAC,IAAK;EAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iBAAiB;EACxCE,KAAK,CAACC,GAAG,CAAC,uCAAuC,CAAC;EACpD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;AAED,MAAMC,YAAY,GAAGR,CAAC,IAAK;EACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;AAC5B,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASK,IAAIA,CAAA,EAAG;EACd,oBACEX,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACtBb,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC1Bb,OAAA;QAAKY,SAAS,EAAC,WAAW;QAAAC,QAAA,eAC1Bb,OAAA;UAAAa,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENjB,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBb,OAAA;QAASkB,OAAO,EAAEjB,aAAc;QAAAY,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClDjB,OAAA;QAASkB,OAAO,EAAEX,gBAAiB;QAAAM,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDjB,OAAA;QAASkB,OAAO,EAAER,YAAa;QAAAG,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACE,EAAA,GAhBQR,IAAI;AAkBb,eAAeA,IAAI;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}