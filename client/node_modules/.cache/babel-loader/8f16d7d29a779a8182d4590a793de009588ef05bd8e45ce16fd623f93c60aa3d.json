{"ast":null,"code":"var _jsxFileName = \"/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/game/homeLayout.js\";\nimport './game.css';\nimport React, { useState, useEffect } from 'react';\nimport NavBar from './navBar';\nimport NavCenter from './navCenter';\nimport UserDec from './userDec';\nimport CardDec from './cardDec';\nimport Gamedec from './gamedec';\nimport PcDec from './pcDec';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  axios.get('http://localhost:5555/deck').then(response => {\n    const deck = response.data.deck;\n    setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n    setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n    setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n    setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n    setUserTurn(true);\n  }).catch(error => {\n    console.error('Error fetching deck:', error);\n  });\n}, []);\nconst startGame = () => {\n  axios.get('http://localhost:5555/start_game').then(response => {\n    setDisplayedCard(response.data.displayed_card);\n    setUserTurn(true);\n  }).catch(error => {\n    console.error('Error starting the game:', error);\n  });\n};\nconst playCard = cardIndex => {\n  // Implement the logic to play a card\n  // Update the 'userTurn', 'displayedCard', 'userHand', 'compHand', and 'availableCards' state accordingly\n  // Make a POST request to '/play_card' endpoint on the Flask server\n};\nfunction homeLayout() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeLayout-crd\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NavCenter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crd-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(UserDec, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crd-shell\",\n        children: [/*#__PURE__*/_jsxDEV(CardDec, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Gamedec, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PcDec, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Quit Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\nexport default homeLayout;","map":{"version":3,"names":["React","useState","useEffect","NavBar","NavCenter","UserDec","CardDec","Gamedec","PcDec","jsxDEV","_jsxDEV","axios","get","then","response","deck","data","setDisplayedCard","pop","setUserHand","slice","setCompHand","setAvailableCards","setUserTurn","catch","error","console","startGame","displayed_card","playCard","cardIndex","homeLayout","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/game/homeLayout.js"],"sourcesContent":["import './game.css'\nimport React, { useState, useEffect } from 'react'\nimport NavBar from './navBar'\nimport NavCenter from './navCenter'\nimport UserDec from './userDec'\nimport CardDec from './cardDec'\nimport Gamedec from './gamedec'\nimport PcDec from './pcDec'\n\nuseEffect(() => {\n  axios.get('http://localhost:5555/deck')\n    .then(response => {\n      const deck = response.data.deck;\n      setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n      setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n      setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n      setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n      setUserTurn(true);\n    })\n    .catch(error => {\n      console.error('Error fetching deck:', error);\n    });\n}, []);\n\nconst startGame = () => {\n  axios.get('http://localhost:5555/start_game')\n    .then(response => {\n      setDisplayedCard(response.data.displayed_card);\n      setUserTurn(true);\n    })\n    .catch(error => {\n      console.error('Error starting the game:', error);\n    });\n};\n\nconst playCard = (cardIndex) => {\n  // Implement the logic to play a card\n  // Update the 'userTurn', 'displayedCard', 'userHand', 'compHand', and 'availableCards' state accordingly\n  // Make a POST request to '/play_card' endpoint on the Flask server\n};\nfunction homeLayout() {\n  return (\n    <div className='homeLayout-crd'>\n    <NavBar />\n    <NavCenter/>\n    <div className='crd-wrap'>\n    <UserDec/>\n    <div className='crd-shell'>\n       <CardDec/>\n       <Gamedec/>\n\n    </div>\n    <PcDec/>\n    </div>\n    <div className='btn'>\n    <button>Quit Game</button>\n    </div>\n    </div>\n  )\n}\n\nexport default homeLayout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}