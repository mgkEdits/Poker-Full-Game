{"ast":null,"code":"var _jsxFileName = \"/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/game/homeLayout.js\",\n  _s = $RefreshSig$();\nimport './game.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from './navBar';\nimport NavCenter from './navCenter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeLayout() {\n  _s();\n  let crtTopCard = [];\n\n  // const [crtTopCard, setPlayedCard] = useState([]);\n  // const [gameCard, setGameCard] = useState([]);\n\n  const [displayedCard, setDisplayedCard] = useState(null);\n  const [userHand, setUserHand] = useState([]);\n  const [compHand, setCompHand] = useState([]);\n  const [availableCards, setAvailableCards] = useState([]);\n  // const [discardPile, setDiscardPile] = useState([]);\n  // const [userTurn, setUserTurn] = useState(false);\n\n  const handlePickCard = () => {\n    const usrPickedCrd = availableCards.shift();\n    setUserHand([...userHand, usrPickedCrd]);\n    console.log(usrPickedCrd, \"user  clicked pick-card  ||  card added to your-hand\");\n    setTimeout(aiLogic, 10000);\n  };\n  console.log(availableCards);\n  useEffect(() => {\n    axios.get('http://localhost:5555/deck').then(response => {\n      const deck = response.data.deck;\n      setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n      setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n      setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n      setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n      // setUserTurn(true);\n    }).catch(error => {\n      console.error('Error fetching deck:', error);\n    });\n  }, []);\n\n  // crtTopCard.unshift(displayedCard)\n  // console.log(crtTopCard,\"array of previous game cards\")\n  let newTopCard = [...crtTopCard, displayedCard];\n  console.log(newTopCard, \"array of previous  game-cards\");\n  const crtTopCrd = newTopCard[0];\n  // const crtTopCrd = crtTopCard[0]\n  console.log(crtTopCrd, 'top card  || currently active game-card');\n  const playCard = card => {\n    const usrPlayedCrd = card;\n    console.log(usrPlayedCrd, 'user-played card');\n    if (usrPlayedCrd.rank === crtTopCrd.rank || usrPlayedCrd.suit === crtTopCrd.suit) {\n      setDisplayedCard(usrPlayedCrd);\n      con;\n      console.log(\"-------------------istep 1 setting display card===============\");\n      crtTopCard.push([usrPlayedCrd]);\n      console.log(\"-------------------istep 2   setting crtTopCard results below  ===============\");\n      console.log(displayedCard, \"supposed active game-card to be  || usestate method -- setdisplay\");\n      console.log(crtTopCard, \"new displayed card\");\n      const updatedUserHand = userHand.filter(card => card !== usrPlayedCrd);\n      setUserHand(updatedUserHand);\n      console.log(\"-------------------istep 4 updated userHand (no-of-cards - 1 )===============\");\n      setTimeout(checkForWinner, 200);\n      console.log(\"-------------------istep 5  checking penalty possibility===============\");\n      if (usrPlayedCrd.rank < 4) {\n        handleeSpecialCardRulesUserHand(usrPlayedCrd);\n        console.log(\"-------------------istep optn 5.1 penalty rules applied [user plays again] ===============\");\n      } else {\n        //function for comp to play\n        console.log(\"-------------------istep optn 5.2 penalty not applied ===============\");\n        console.log(\"its now ai`s turn\"); // Call the function for AI logic after a delay\n        setTimeout(aiLogic, 3000);\n      }\n      console.log(\"------------------- final istep [ user Logic]  ===============\");\n    } else {\n      alert(\"Pick another card\");\n    }\n  };\n  function isValidMove(aiCard) {\n    return aiCard.suit === crtTopCrd.suit || aiCard.rank === crtTopCrd.rank;\n  }\n  function handleSpecialCardRulesCompHand(card) {\n    //handle special hand played by computer\n    switch (card.rank) {\n      case '2':\n        handlePenalty(2);\n        break;\n      case '3':\n        handlePenalty(3);\n        break;\n    }\n  }\n  function handleeSpecialCardRulesUserHand(card) {\n    //handle special hand played by user\n    switch (card.rank) {\n      case '2':\n        handleePenalty(2);\n        break;\n      case '3':\n        handleePenalty(3);\n        break;\n    }\n  }\n  function handleePenalty(count) {\n    //handle special hand played by user\n\n    setCompHand(prevCompHand => {\n      const updatedCompHand = [...prevCompHand];\n      for (let i = 0; i < count; i++) {\n        const drawnCard = availableCards.shift();\n        updatedCompHand.push(drawnCard);\n        console.log('AI draws penalty card:', drawnCard);\n      }\n      return updatedCompHand;\n    });\n    console.log(compHand);\n    //   for (let i = 0; i < count; i++) {\n    //     const drawnCard = availableCards.shift()\n    //     setCompHand([...compHand,drawnCard])\n    //     console.log('AI draws penalty card:', drawnCard);\n    //     console.log(compHand)\n    //   }\n  }\n  function handlePenalty(count) {\n    setUserHand(prevUserHand => {\n      const updatedUserHand = [...prevUserHand];\n      for (let i = 0; i < count; i++) {\n        const drawnCard = availableCards.shift();\n        updatedUserHand.push(drawnCard);\n        console.log('Player draws penalty card:', drawnCard);\n      }\n      return updatedUserHand;\n    });\n    console.log(userHand);\n    // for (let i = 0; i < count; i++) {\n    //   const drawnCard = availableCards.shift()\n    //   setUserHand([...userHand,drawnCard])\n    //   console.log('Player draws penalty card:', drawnCard);\n    //   console.log(userHand)\n    // }\n  }\n  const dropCard = cardsToDrop => {\n    const aiSelectedCrd = cardsToDrop[Math.floor(Math.random() * cardsToDrop.length)];\n    console.log(aiSelectedCrd, \"ai played card move\");\n\n    // setAvailableCards([...availableCards, displayedCard]);\n    // crtTopCard.push([aiSelectedCrd])\n    setDisplayedCard(aiSelectedCrd);\n    handleSpecialCardRulesCompHand(aiSelectedCrd);\n    const updatedCompHand = compHand.filter(card => card !== aiSelectedCrd);\n    setCompHand(updatedCompHand);\n    setTimeout(checkForWinner, 2000);\n  };\n  const getCardRankValue = rank => {\n    const rankValues = {\n      'Ace': 1,\n      '2': 2,\n      '3': 3,\n      '4': 4,\n      '5': 5,\n      '6': 6,\n      '7': 7,\n      '8': 8,\n      '9': 9,\n      '10': 10,\n      'Queen': 11\n      // Add more ranks as needed\n    };\n    return rankValues[rank] || 0;\n  };\n\n  //computer logic for game continuity\n  const aiLogic = () => {\n    console.log(crtTopCrd, \"previously displayed card\");\n    const validMoves = compHand.filter(isValidMove);\n    console.log(validMoves, \"valid moves\");\n    if (validMoves.length > 0) {\n      const specialMoves = validMoves.filter(card => card.rank === 'Queen' || card.rank === '8');\n      if (specialMoves.length > 0) {\n        dropCard(specialMoves);\n      } else {\n        // Prioritize dropping cards with the same suit as the displayed card\n        const sameSuitMoves = validMoves.filter(card => card.suit === displayedCard.suit);\n        if (sameSuitMoves.length > 0) {\n          dropCard(sameSuitMoves);\n        } else {\n          // If no special or same suit moves, prioritize dropping lower-ranked cards\n          validMoves.sort((a, b) => getCardRankValue(a.rank) - getCardRankValue(b.rank));\n          dropCard([validMoves[0]]);\n        }\n      }\n    } else {\n      // Computer draws a card\n      const aiPickedCrd = availableCards.shift();\n      setCompHand([...compHand, aiPickedCrd]);\n      console.log(aiPickedCrd, \"ai picked card\");\n    }\n  };\n  function checkForWinner() {\n    if (userHand.length === 0) {\n      console.log('Player wins!');\n    } else if (compHand.length === 0) {\n      console.log('Computer wins!');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeLayout-crd\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar /* ----------------------------add username as prop from Cookie  -----------------*/, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavCenter /*-----------------------   add games won Prop for Running   -----------------------------------*/, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crd-wrap\" /*-------  User Cards Section  ---------*/,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userDec-crd\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Hand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userDec-crrd\",\n          children: userHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playCardDec-crd\",\n            onClick: () => playCard(card),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [card.rank, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"*\", card.suit, \"* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crd-shell\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardDec-crd\",\n          onClick: handlePickCard /*-------  Pick Cards Section  ---------*/,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pick Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gamedec-crd\" /*-------  Game Table Section  ---------*/,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Game Table \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crdd-wrp\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crd-crd\" /*-------  Game Card Section  ---------*/,\n              children: displayedCard && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Game Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [displayedCard.rank, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" **\", displayedCard.suit, \"**\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pcDec-crd\" /*-------  pc Cards Section  ---------*/,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"pc Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userDec-crrd\",\n          children: compHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playCardDec-crd\",\n            onClick: () => playCard(index),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [card.rank, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"*\", card.suit, \"* \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Quit Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeLayout, \"Sn2FKMuprEWmF8uSqNVJKyaH6hc=\");\n_c = HomeLayout;\nexport default HomeLayout;\nvar _c;\n$RefreshReg$(_c, \"HomeLayout\");","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar","NavCenter","jsxDEV","_jsxDEV","HomeLayout","_s","crtTopCard","displayedCard","setDisplayedCard","userHand","setUserHand","compHand","setCompHand","availableCards","setAvailableCards","handlePickCard","usrPickedCrd","shift","console","log","setTimeout","aiLogic","get","then","response","deck","data","pop","slice","catch","error","newTopCard","crtTopCrd","playCard","card","usrPlayedCrd","rank","suit","con","push","updatedUserHand","filter","checkForWinner","handleeSpecialCardRulesUserHand","alert","isValidMove","aiCard","handleSpecialCardRulesCompHand","handlePenalty","handleePenalty","count","prevCompHand","updatedCompHand","i","drawnCard","prevUserHand","dropCard","cardsToDrop","aiSelectedCrd","Math","floor","random","length","getCardRankValue","rankValues","validMoves","specialMoves","sameSuitMoves","sort","a","b","aiPickedCrd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/media/mgkedits/mgkEdits/mgk-development/code/phase-4-project/Poker-Full-Game/client/src/components/game/homeLayout.js"],"sourcesContent":["import './game.css'\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport NavBar from './navBar'\nimport NavCenter from './navCenter'\n\nfunction HomeLayout() {\n\n   let crtTopCard = [];\n   \n  // const [crtTopCard, setPlayedCard] = useState([]);\n  // const [gameCard, setGameCard] = useState([]);\n\n  const [displayedCard, setDisplayedCard] = useState(null);\n  const [userHand, setUserHand] = useState([]);\n  const [compHand, setCompHand] = useState([]);\n  const [availableCards, setAvailableCards] = useState([]);\n  // const [discardPile, setDiscardPile] = useState([]);\n  // const [userTurn, setUserTurn] = useState(false);\n\n\n  const handlePickCard=( )=>{\n     const usrPickedCrd = availableCards.shift()\n     setUserHand([...userHand,usrPickedCrd])\n     console.log(usrPickedCrd, \"user  clicked pick-card  ||  card added to your-hand\")\n     setTimeout(aiLogic,10000);\n  }\n  console.log(availableCards);\n\n  useEffect(() => {\n    axios.get('http://localhost:5555/deck')\n      .then(response => {\n        const deck = response.data.deck;\n        setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n        setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n        setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n        setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n        // setUserTurn(true);\n      })\n      .catch(error => {\n        console.error('Error fetching deck:', error);\n      });\n  }, []);\n    \n    // crtTopCard.unshift(displayedCard)\n    // console.log(crtTopCard,\"array of previous game cards\")\n    let newTopCard = [...crtTopCard,displayedCard]\n    console.log(newTopCard,\"array of previous  game-cards\")\n    const crtTopCrd = newTopCard[0]\n    // const crtTopCrd = crtTopCard[0]\n    console.log(crtTopCrd,'top card  || currently active game-card');\n\n  const playCard = (card) => {\n    const usrPlayedCrd = card\n    console.log(usrPlayedCrd,'user-played card');\n\n    if (usrPlayedCrd.rank === crtTopCrd.rank ||usrPlayedCrd.suit === crtTopCrd.suit ){\n      \n      setDisplayedCard(usrPlayedCrd);\n      con\n      console.log(\"-------------------istep 1 setting display card===============\")\n      crtTopCard.push([usrPlayedCrd])\n      console.log(\"-------------------istep 2   setting crtTopCard results below  ===============\")\n      console.log(displayedCard,\"supposed active game-card to be  || usestate method -- setdisplay\")\n      console.log(crtTopCard,\"new displayed card\")\n\n      const updatedUserHand = userHand.filter(card => card !== usrPlayedCrd);\n      setUserHand(updatedUserHand);\n      console.log(\"-------------------istep 4 updated userHand (no-of-cards - 1 )===============\")\n      setTimeout(checkForWinner,200);\n      console.log(\"-------------------istep 5  checking penalty possibility===============\")\n      if (usrPlayedCrd.rank < 4) {\n        handleeSpecialCardRulesUserHand(usrPlayedCrd);\n        console.log(\"-------------------istep optn 5.1 penalty rules applied [user plays again] ===============\")\n      }else{\n        //function for comp to play\n        console.log(\"-------------------istep optn 5.2 penalty not applied ===============\")\n        console.log(\"its now ai`s turn\") // Call the function for AI logic after a delay\n        setTimeout(aiLogic,3000);\n      }\n      console.log(\"------------------- final istep [ user Logic]  ===============\")\n      \n    }else{\n     \n      alert(\"Pick another card\")\n    }\n    \n  };\n\n  \n  function isValidMove(aiCard) { \n    return aiCard.suit === crtTopCrd.suit || aiCard.rank === crtTopCrd.rank; \n   }\n\n   function handleSpecialCardRulesCompHand(card) {//handle special hand played by computer\n    switch (card.rank) {\n      case '2':\n        handlePenalty(2);\n        break;\n      case '3':\n        handlePenalty(3);\n        break;\n    }\n  }\n\n  function handleeSpecialCardRulesUserHand(card) { //handle special hand played by user\n    switch (card.rank) {\n      case '2':\n        handleePenalty(2);\n        break;\n      case '3':\n        handleePenalty(3);\n        break;\n    }\n  }\n\n  function handleePenalty(count) {  //handle special hand played by user\n\n    setCompHand(prevCompHand => {\n      const updatedCompHand = [...prevCompHand];\n      for (let i = 0; i < count; i++) {\n        const drawnCard = availableCards.shift();\n        updatedCompHand.push(drawnCard);\n        console.log('AI draws penalty card:', drawnCard);\n      }\n      return updatedCompHand;\n    });\n    console.log(compHand)\n  //   for (let i = 0; i < count; i++) {\n  //     const drawnCard = availableCards.shift()\n  //     setCompHand([...compHand,drawnCard])\n  //     console.log('AI draws penalty card:', drawnCard);\n  //     console.log(compHand)\n  //   }\n  }\n\n  function handlePenalty(count) {\n\n    setUserHand(prevUserHand => {\n      const updatedUserHand = [...prevUserHand];\n      for (let i = 0; i < count; i++) {\n        const drawnCard = availableCards.shift();\n        updatedUserHand.push(drawnCard);\n        console.log('Player draws penalty card:', drawnCard);\n      }\n      return updatedUserHand;\n    \n\n    });\n    console.log(userHand)\n    // for (let i = 0; i < count; i++) {\n    //   const drawnCard = availableCards.shift()\n    //   setUserHand([...userHand,drawnCard])\n    //   console.log('Player draws penalty card:', drawnCard);\n    //   console.log(userHand)\n    // }\n  }\n\n  const dropCard = (cardsToDrop) => {\n    const aiSelectedCrd = cardsToDrop[Math.floor(Math.random() * cardsToDrop.length)];\n    console.log(aiSelectedCrd, \"ai played card move\");\n  \n    // setAvailableCards([...availableCards, displayedCard]);\n    // crtTopCard.push([aiSelectedCrd])\n    setDisplayedCard(aiSelectedCrd);\n    handleSpecialCardRulesCompHand(aiSelectedCrd);\n  \n    const updatedCompHand = compHand.filter(card => card !== aiSelectedCrd);\n    setCompHand(updatedCompHand);\n    setTimeout(checkForWinner,2000);\n  };\n\n  const getCardRankValue = (rank) => {\n    const rankValues = {\n      'Ace': 1,\n      '2': 2,\n      '3': 3,\n      '4': 4,\n      '5': 5,\n      '6': 6,\n      '7': 7,\n      '8': 8,\n      '9': 9,\n      '10': 10,\n      'Queen': 11\n      // Add more ranks as needed\n    };\n  \n    return rankValues[rank] || 0;\n  };\n  \n  //computer logic for game continuity\n  const aiLogic = () =>{\n    console.log(crtTopCrd, \"previously displayed card\")\n    const validMoves = compHand.filter(isValidMove);\n    console.log(validMoves, \"valid moves\")\n    \n    if (validMoves.length > 0) {\n     \n      const specialMoves = validMoves.filter(card => card.rank === 'Queen' || card.rank === '8');\n      if (specialMoves.length > 0) {\n        dropCard(specialMoves);\n      } else {\n        // Prioritize dropping cards with the same suit as the displayed card\n        const sameSuitMoves = validMoves.filter(card => card.suit === displayedCard.suit);\n        if (sameSuitMoves.length > 0) {\n          dropCard(sameSuitMoves);\n        } else {\n          // If no special or same suit moves, prioritize dropping lower-ranked cards\n          validMoves.sort((a, b) => getCardRankValue(a.rank) - getCardRankValue(b.rank));\n          dropCard([validMoves[0]]);\n        }\n      }\n    }else {\n      // Computer draws a card\n      const aiPickedCrd = availableCards.shift()\n      setCompHand([...compHand,aiPickedCrd])\n      console.log(aiPickedCrd, \"ai picked card\")\n    }\n  };\n\n  function checkForWinner() {\n    if (userHand.length === 0) {\n      console.log('Player wins!');\n    } else if (compHand.length === 0) {\n      console.log('Computer wins!');\n    }\n  }\n\n  return (\n    <div className='homeLayout-crd'>\n      <NavBar  /* ----------------------------add username as prop from Cookie  -----------------*/ />  \n      <NavCenter  /*-----------------------   add games won Prop for Running   -----------------------------------*/ />\n      \n      <div className='crd-wrap'/*-------  User Cards Section  ---------*/>\n        <div className='userDec-crd'>\n        <h2>Your Hand</h2>\n        \n          <div className='userDec-crrd'>\n            {userHand.map((card, index) => (\n              <div  className='playCardDec-crd' key={index} onClick={() => playCard(card)}>\n                <p>{card.rank} </p> \n                <p>*{card.suit}* </p>\n              </div>\n            ))}\n          </div>\n        \n     </div>\n        <div className='crd-shell'>\n            <div className='cardDec-crd'  onClick={handlePickCard}/*-------  Pick Cards Section  ---------*/ > \n            <h2>Pick Card</h2>\n            </div>\n\n            <div className='gamedec-crd' /*-------  Game Table Section  ---------*/>\n              <p>Game Table </p>\n                <div className='crdd-wrp'>\n                \n                \n                <div className='crd-crd'/*-------  Game Card Section  ---------*/>\n                {displayedCard && (\n                  <div>\n                    <h2>Game Card</h2>\n                    <p>{displayedCard.rank} </p>\n                    <p> **{displayedCard.suit}**</p>\n                  </div>\n                )}\n                </div>\n        \n                </div>\n            </div>\n        </div>\n        <div className='pcDec-crd' /*-------  pc Cards Section  ---------*/>\n          <h2>pc Cards</h2>\n          \n            <div className='userDec-crrd'>\n              \n              {compHand.map((card, index) => (\n                <div  className='playCardDec-crd' key={index} onClick={() => playCard(index)}>\n                  \n                <p>{card.rank} </p> \n                <p>*{card.suit}* </p>\n                  \n                </div>\n              ))}\n            </div>\n         \n        </div>\n      </div>\n      <div className='btn'>\n        <button>Quit Game</button>\n      </div>\n    </div>\n  )\n}\n\nexport default HomeLayout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}