{"ast":null,"code":"var _jsxFileName = \"/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [displayedCard, setDisplayedCard] = useState(null);\n  const [userHand, setUserHand] = useState([]);\n  const [compHand, setCompHand] = useState([]);\n  const [availableCards, setAvailableCards] = useState([]);\n  const [userTurn, setUserTurn] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:5555/deck').then(response => {\n      const deck = response.data.deck;\n      setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n      setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n      setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n      setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n      setUserTurn(true);\n    }).catch(error => {\n      console.error('Error fetching deck:', error);\n    });\n  }, []);\n  const startGame = () => {\n    axios.get('http://localhost:5555/start_game').then(response => {\n      setDisplayedCard(response.data.displayed_card);\n      setUserTurn(true);\n    }).catch(error => {\n      console.error('Error starting the game:', error);\n    });\n  };\n  const playCard = cardIndex => {\n    // Implement the logic to play a card\n    // Update the 'userTurn', 'displayedCard', 'userHand', 'compHand', and 'availableCards' state accordingly\n    // Make a POST request to '/play_card' endpoint on the Flask server\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Poker Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), displayedCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Displayed Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [displayedCard.rank, \" of \", displayedCard.suit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), userTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Hand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), userHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => playCard(index),\n        children: [card.rank, \" of \", card.suit]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Hidden Card\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"H8WR0LtzBW9azfPxWrjezXj1aGA=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GamePage","_s","displayedCard","setDisplayedCard","userHand","setUserHand","compHand","setCompHand","availableCards","setAvailableCards","userTurn","setUserTurn","get","then","response","deck","data","pop","slice","catch","error","console","startGame","displayed_card","playCard","cardIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","rank","suit","map","card","index","onClick","_c","$RefreshReg$"],"sources":["/home/sule/Development/Flask/poker-react-app/src/components/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst GamePage = () => {\n  const [displayedCard, setDisplayedCard] = useState(null);\n  const [userHand, setUserHand] = useState([]);\n  const [compHand, setCompHand] = useState([]);\n  const [availableCards, setAvailableCards] = useState([]);\n  const [userTurn, setUserTurn] = useState(false);\n\n  useEffect(() => {\n    axios.get('http://localhost:5555/deck')\n      .then(response => {\n        const deck = response.data.deck;\n        setDisplayedCard(deck.pop()); // Set the displayed card from the top of the deck\n        setUserHand([...deck.slice(0, 4)]); // Initial user hand (4 cards)\n        setCompHand([...deck.slice(4, 8)]); // Initial comp hand (4 cards)\n        setAvailableCards([...deck.slice(8)]); // Remaining cards for available cards\n        setUserTurn(true);\n      })\n      .catch(error => {\n        console.error('Error fetching deck:', error);\n      });\n  }, []);\n\n  const startGame = () => {\n    axios.get('http://localhost:5555/start_game')\n      .then(response => {\n        setDisplayedCard(response.data.displayed_card);\n        setUserTurn(true);\n      })\n      .catch(error => {\n        console.error('Error starting the game:', error);\n      });\n  };\n\n  const playCard = (cardIndex) => {\n    // Implement the logic to play a card\n    // Update the 'userTurn', 'displayedCard', 'userHand', 'compHand', and 'availableCards' state accordingly\n    // Make a POST request to '/play_card' endpoint on the Flask server\n  };\n\n  return (\n    <div>\n      <h1>Poker Game</h1>\n      {displayedCard && (\n        <div>\n          <h2>Displayed Card</h2>\n          <p>{displayedCard.rank} of {displayedCard.suit}</p>\n        </div>\n      )}\n      {userTurn && (\n        <div>\n          <h2>Your Hand</h2>\n          {userHand.map((card, index) => (\n            <button key={index} onClick={() => playCard(index)}>\n              {card.rank} of {card.suit}\n            </button>\n          ))}\n        </div>\n      )}\n      <div>\n        <h2>Available Cards</h2>\n        <ul>\n          {availableCards.map((card, index) => (\n            <li key={index}>Hidden Card</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <button onClick={startGame}>Start Game</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACe,GAAG,CAAC,4BAA4B,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAI,CAACD,IAAI;MAC/BZ,gBAAgB,CAACY,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9BZ,WAAW,CAAC,CAAC,GAAGU,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpCX,WAAW,CAAC,CAAC,GAAGQ,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpCT,iBAAiB,CAAC,CAAC,GAAGM,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvCP,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBzB,KAAK,CAACe,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;MAChBX,gBAAgB,CAACW,QAAQ,CAACE,IAAI,CAACO,cAAc,CAAC;MAC9CZ,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC;EAED,MAAMI,QAAQ,GAAIC,SAAS,IAAK;IAC9B;IACA;IACA;EAAA,CACD;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClB5B,aAAa,iBACZH,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/B,OAAA;QAAA2B,QAAA,GAAIxB,aAAa,CAAC6B,IAAI,EAAC,MAAI,EAAC7B,aAAa,CAAC8B,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CACN,EACApB,QAAQ,iBACPX,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjB1B,QAAQ,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBpC,OAAA;QAAoBqC,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAACW,KAAK,CAAE;QAAAT,QAAA,GAChDQ,IAAI,CAACH,IAAI,EAAC,MAAI,EAACG,IAAI,CAACF,IAAI;MAAA,GADdG,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACD/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB/B,OAAA;QAAA2B,QAAA,EACGlB,cAAc,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BpC,OAAA;UAAA2B,QAAA,EAAgB;QAAW,GAAlBS,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACN/B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAQqC,OAAO,EAAEd,SAAU;QAAAI,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAvEID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}